package com.anil;

import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.time.LocalDate;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

class Result {

    /*
     * Complete the 'findDay' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts following parameters:
     *  1. INTEGER month
     *  2. INTEGER day
     *  3. INTEGER year
     */

    public static String findDay(int month, int day, int year) {
		/*
		 * int day2 =0 ;
		 * 
		 * if (year >2000 && year<3000){ if (month % 2 == 1 || month ==8){ if (day
		 * <=31){ day2 = day % 7; System.out.println(day2); switch(day2){ case 1: return
		 * "SUNDAY"; case 2: return "MONDAY"; case 3: return "TUESDAY"; case 4: return
		 * "WEDNESDAY"; case 5: return "THURSDAY"; case 6: return "FRIDAY"; case 0:
		 * return "SATURDAY"; default: return "Not a valid day!"; } } }
		 * 
		 * } else{ System.out.println("Not a valid year!"); } return "";
		 */

    	
    	LocalDate dt = LocalDate.of(mm, dd, yyyy);
    	return dt.getDayOfWeek().toString();

    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        //BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String[] firstMultipleInput = bufferedReader.readLine().replaceAll("\\s+$", "").split(" ");

        int month = Integer.parseInt(firstMultipleInput[0]);

        int day = Integer.parseInt(firstMultipleInput[1]);

        int year = Integer.parseInt(firstMultipleInput[2]);

        String res = Result.findDay(month, day, year);

       // bufferedWriter.write(res);
       // bufferedWriter.newLine();
        
        System.out.println(res);

        bufferedReader.close();
        //bufferedWriter.close();
    }
}
